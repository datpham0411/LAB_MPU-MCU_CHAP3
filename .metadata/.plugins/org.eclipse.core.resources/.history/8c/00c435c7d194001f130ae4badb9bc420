/*
 * fsm_traffic.c
 *
 *  Created on: Oct 26, 2024
 *      Author: datph
 */
#include "fsm_traffic.h"

int status = -1;
int red_duration = 3000;
int red_duration_temp = 0;
int amber_duration = 1000;
int amber_duration_temp = 0;
int green_duration = 2000;
int green_duration_temp = 3000;

void setColor(GPIO_TypeDef *GPIOx, uint16_t Led_1, uint16_t Led_2, uint16_t Led_3, GPIO_PinState Led_1_State, GPIO_PinState Led_2_State, GPIO_PinState Led_3_State) {
	HAL_GPIO_WritePin(GPIOx, Led_1, Led_1_State);
	HAL_GPIO_WritePin(GPIOx, Led_2, Led_2_State);
	HAL_GPIO_WritePin(GPIOx, Led_3, Led_3_State);
}

void setColorToggle(GPIO_TypeDef *GPIOx, uint16_t Led_1, uint16_t Led_2, uint16_t Led_3) {
	HAL_GPIO_TogglePin(GPIOx, Led_1);
	HAL_GPIO_TogglePin(GPIOx, Led_2);
	HAL_GPIO_TogglePin(GPIOx, Led_3);
}

int isErrorOccured() {
	if ((amber_duration + green_duration) != red_duration) return 1;
	return 0;
}

void fsm_traffic_run() {
	switch(status) {
		case NORMAL:
			fsm_normal_run();

			if (isButton1Pressed()) {
				status = INITIAL;
			}
			break;
		case INITIAL:
			setColor(GPIOA, LED_RED_A_Pin, LED_AMBER_A_Pin, LED_GREEN_A_Pin, OFF, OFF, OFF);
			setColor(GPIOA, LED_RED_B_Pin, LED_AMBER_B_Pin, LED_GREEN_B_Pin, OFF, OFF, OFF);
			setColor(GPIOA, ENA1_Pin, ENA2_Pin, ENA2_Pin, OFF, OFF, OFF);
			setColor(GPIOA, ENB1_Pin, ENB2_Pin, ENB2_Pin, OFF, OFF, OFF);
			setColor(GPIOB, SEG_0_Pin, SEG_1_Pin, SEG_2_Pin, OFF, OFF, OFF);
			setColor(GPIOB, SEG_3_Pin, SEG_4_Pin, SEG_5_Pin, OFF, OFF, OFF);
			setColor(GPIOB, SEG_6_Pin, SEG_A_Pin, SEG_B_Pin, OFF, OFF, OFF);
			setColor(GPIOB, SEG_C_Pin, SEG_D_Pin, SEG_E_Pin, OFF, OFF, OFF);
			setColor(GPIOB, SEG_F_Pin, SEG_G_Pin, SEG_G_Pin, OFF, OFF, OFF);

			status = MODIFY_RED;
			setTimer3(250);
			setTimer2(147);
			setTimer1(153);
			break;
		case MODIFY_RED:
			if (timer1_flag == 1 && index == 0) {
				setTimer1(150);
				display_num('A', 1, red_duration/10000);
			}
			else if (timer1_flag == 1 && index == 1) {
				setTimer1(150);
				display_num('A', 2, (red_duration%10000)/1000);
			}

			if (timer2_flag == 1 && index == 0) { // B mode, A value
				setTimer2(150);
				display_num('B', 1, 0);
			}
			else if (timer2_flag == 1 && index == 1) {
				setTimer2(150);
				display_num('B', 2, MODIFY_RED);
			}

			if (timer3_flag == 1) {
				setTimer3(250);
				setColorToggle(GPIOA, LED_RED_A_Pin, LED_RED_B_Pin, LED_RED_B_Pin);
			}

			if(isButton2Pressed()) {
				red_duration_temp = red_duration;
				red_duration = red_duration + 1000;
				if (red_duration > 99000) red_duration = 1000;
			}

			if (isButton1Pressed()) {
				status = MODIFY_AMBER;
				setTimer3(250);
				setTimer2(147);
				setTimer1(153);
			}
			break;
		case MODIFY_AMBER:
			if (timer1_flag == 1 && index == 0) {
				setTimer1(150);
				display_num('A', 1, amber_duration/10000);
			}
			else if (timer1_flag == 1 && index == 1) {
				setTimer1(150);
				display_num('A', 2, (amber_duration%10000)/1000);
			}

			if (timer2_flag == 1 && index == 0) { // B mode, A value
				setTimer2(150);
				display_num('B', 1, 0);
			}
			else if (timer2_flag == 1 && index == 1) {
				setTimer2(150);
				display_num('B', 2, MODIFY_AMBER);
			}

			if (timer3_flag == 1) {
				setTimer3(250);
				setColorToggle(GPIOA, LED_AMBER_A_Pin, LED_AMBER_B_Pin, LED_AMBER_B_Pin);
			}

			if(isButton2Pressed()) {
				amber_duration_temp = amber_duration;
				amber_duration = amber_duration + 1000;
				if (amber_duration > 99000) amber_duration = 1000;
			}

			if (isButton1Pressed()) {
				status = MODIFY_GREEN;
				setTimer3(250);
				setTimer2(147);
				setTimer1(153);
			}
			break;
		case MODIFY_GREEN:
			if (timer1_flag == 1 && index == 0) {
				setTimer1(150);
				display_num('A', 1, green_duration/10000);
			}
			else if (timer1_flag == 1 && index == 1) {
				setTimer1(150);
				display_num('A', 2, (green_duration%10000)/1000);
			}

			if (timer2_flag == 1 && index == 0) { // B mode, A value
				setTimer2(150);
				display_num('B', 1, 0);
			}
			else if (timer2_flag == 1 && index == 1) {
				setTimer2(150);
				display_num('B', 2, MODIFY_GREEN);
			}

			if (timer3_flag == 1) {
				setTimer3(250);
				setColorToggle(GPIOA, LED_GREEN_A_Pin, LED_GREEN_B_Pin, LED_GREEN_B_Pin);
			}

			if(isButton3Pressed()) {
				if(is)
			}

			if(isButton2Pressed()) {
				green_duration_temp = green_duration;
				green_duration = green_duration + 1000;
				if (green_duration > 99000) green_duration = 1000;
			}

			if (isButton1Pressed()) {
				status = NORMAL;
			}
			break;
		default:
			break;
	}
}

